@model FilterProductsViewModel

@{
	var defaultImageURL = "/Content/images/system/default-placeholder.png";
}

<div class="filter-shop clearfix">
	<p class="showing-product float-right">
		Showing @(((Model.Pager.CurrentPage - 1) * Model.Pager.PageSize) + 1 ) – @(((Model.Pager.CurrentPage - 1) * Model.Pager.PageSize) + (Model.Products.Count < Model.Pager.PageSize ? Model.Products.Count : Model.Pager.PageSize)) of @Model.Pager.TotalItems Products
</p>
</div>
<div class="product-content product-threecolumn product-slidebar clearfix">
	<ul class="product style2 sd1">

		@foreach (var product in Model.Products)
			{

				var imageURL = string.IsNullOrEmpty(product.ImageURL) ? defaultImageURL : product.ImageURL;
			<li class="product-item">
				<div class="product-thumb cleardfix">
					<a href="@Url.Action("Details", "Product", new { ID = product.ID })" class="product-thumb">
						<img src="@imageURL" alt="image" />
					</a>
				</div>
				<div class="product-info clearfix">
					<span class="product-title">@product.Name</span>
					<div class="price">
						<ins>
							<span class="amount">@product.Price</span>
						</ins>
					</div>
				</div>

				<div class="add-to-cart text-center">
					<a class="productAddToCart" data-id="@product.ID">ADD TO CART</a>
				</div>
				<a href="#" class="like"><i class="fa fa-heart-o"></i></a>
			</li>
			}

	</ul>

</div>

@if (Model.Pager != null && Model.Pager.TotalPages > 1)
{
	<div class="product-pagination text-center clearfix">
		<ul class="flat-pagination">
			@if (Model.Pager.CurrentPage > 1)
			{
				<li class="prev">
					<a data-href="@Url.Action("FilterProducts", "Shop", new { pageNo = Model.Pager.CurrentPage - 1, sortBy = Model.SortBy, categoryID = Model.CategoryID })" class="pageDataLink" ><i class="fa fa-angle-left"></i></a>
				</li>}

			@for (var page = Model.Pager.StartPage; page <= Model.Pager.EndPage; page++)
			{
				string activeClass = Model.Pager.CurrentPage == page ? "active bg-info" : string.Empty;

				<li class="@activeClass"><a data-href="@Url.Action("FilterProducts", "Shop", new { pageNo = page, sortBy = Model.SortBy, categoryID = Model.CategoryID })" title="" class="pageDataLink">@page</a></li>}

			@if (Model.Pager.CurrentPage < Model.Pager.TotalPages)
			{
				<li><a data-href="@Url.Action("FilterProducts", "Shop", new { pageNo = Model.Pager.CurrentPage + 1, sortBy = Model.SortBy, categoryID = Model.CategoryID })" class="pageDataLink"><i class="fa fa-angle-right"></i></a></li>}
		</ul><!-- /.flat-pagination -->
	</div>
}

<input type="hidden" id="SearchTerm" value="@Model.SearchTerm" />
<input type="hidden" id="SortBy" value="@Model.SortBy" />
<input type="hidden" id="CategoryID" value="@Model.CategoryID" />

<script>
	$(".pageDataLink").click(function () {
		var url = $(this).attr("data-href");
		if (url != "" || url != undefined) {
			GetData(url);
		}
	});

	var products= [];
	$(".productAddToCart").click(function () {
		var existingCookieData = $.cookie('CartProducts');
		if (existingCookieData != undefined && existingCookieData != "" && existingCookieData != null) {
			products = existingCookieData.split('-');
		}
		else {
			products = [];
		}
		var productID = $(this).attr('data-id');
		products.push(productID);
		$.cookie('CartProducts', products.join('-'), { path: '/' });
		updateCartProducts();
		swal("Done", "Product Added to Cart!", "success");
	});

</script>
