@model ProductSearchViewModel
@{
	ViewBag.Title = "ProductTable";
}

<h2>Product Table</h2>
<link rel="stylesheet" type="text/css" href="//cdn.datatables.net/1.13.2/css/jquery.dataTables.min.css">
<script src="//cdn.datatables.net/1.13.2/js/jquery.dataTables.min.js"></script>

<div>
	<form method="post">
		<div class="row">
			<div class="col-md-8">

				<div class="form-group">

					<label>Search</label>
					<input class="form-control" id="searchTxt" name="Search" value="@Model.SearchTerm" />
				</div>
			</div>
			<div class="col-md-4">
				<div class="form-group">

					<label>Action</label>
					<div class="row">
						<div class="col-md-4 pr-0">
							<button class="btn btn-primary form-control" type="button" id="searchBtn">Search</button>
						</div>
						<div class="col-md-4 pr-0">
							<button class="btn btn-primary form-control" type="button" id="resethBtn">Reset</button>
						</div>
						<div class="col-md-4 pr-0">
							<button class="btn btn-primary form-control" type="button" id="newBtn">New</button>
						</div>
					</div>
				</div>

			</div>
		</div>
	</form>

</div>
<div class="table">
	<table id ="ProductsTable" class="table table-striped text-center">
		<thead>
			<tr>
				<th class="font-weight-bold text-center">Product Name</th>
				<th class="font-weight-bold text-center">Category</th>
				<th class="font-weight-bold text-center">Price</th>
				<th class="wrap-td font-weight-bold text-center">Actions</th>
			</tr>
		</thead>
		<tbody>
			@if (Model.Products != null && Model.Products.Count > 0)
			{
				foreach (var product in Model.Products)
				{
					<tr>
						<td>@product.Name</td>
						<td>
							@if (product.Category != null)
							{
								<text>@product.Category.Name</text>
							}
							else
							{
								<text>-</text>
							}
						</td>
						<td>@product.Price</td>
						<td class="wrap-td">
							<button class="editBtn" data-id="@product.ID">Edit</button>
							<button class="deleteBtn" data-id="@product.ID">Delete</button>
						</td>
					</tr>
				}

			}
			else
			{
				<tr><td colspan="3" class="text-danger">No Products found.</td></tr>}
		</tbody>
	</table>

	<div>
		@*@if (Model.PageNo != 1)
		{
			<button class="pageButtons" data-pageNo="@(Model.PageNo - 1)">Previous</button>
		}
		
		<button class="pageButtons" data-pageNo="@(Model.PageNo + 1)">Next</button>*@

		@if (Model.Pager != null && Model.Pager.TotalPages > 1)
		{

			if (Model.Pager.CurrentPage > 1)
			{
				<button class="pageButtons" data-pageno="1">First</button>
				<button class="pageButtons" data-pageno="@(Model.Pager.CurrentPage - 1)">Previous</button>}

			for (var page = Model.Pager.StartPage; page <= Model.Pager.EndPage; page++)
			{
				string activeClass = Model.Pager.CurrentPage == page ? "active bg-info" : string.Empty;

				<button class="@activeClass pageButtons" data-pageno="@page">@page</button>}

			if (Model.Pager.CurrentPage < Model.Pager.TotalPages)
			{
				<button class="pageButtons" data-pageno="@(Model.Pager.CurrentPage + 1)">Next</button>
				<button class="pageButtons" data-pageno="@Model.Pager.EndPage">Last</button>}
		}

	</div>
</div>

<script>
	$(".pageButtons").click(function () {
		$.ajax({
			type: 'GET',
			url: '@Url.Action("ProductTable", "Product")', //'/Product/ProductTable',
			data: {
				pageNo: $(this).attr("data-pageno")
			}
		})
		.done(function (response) {
			$("#tableContainer").html(response);
		})
		.fail(function (XMLHttpRequest, textStatus, errorThrown) {
			alert("FAIL");
		});
	});

	$("#searchBtn").click(function () {
		var searchValue = $("#searchTxt").val();

		$.ajax({
			type: "GET",
			url: '@Url.Action("ProductTable", "Product")', // '/Product/ProductTable',
			data: {
				search: searchValue
			}
		})
		.done(function (response) {
			$("#tableContainer").html(response);
		})
		.fail(function (XMLHttpRequest, textStatus, errorThrown) {
			alert("FAIL");
		});
	});

	$("#resetBtn").click(function () {
		var searchValue = '';

		$.ajax({
			type: "GET",
			url: '@Url.Action("ProductTable", "Product")', // '/Product/ProductTable',
			data: {
				search: searchValue
			}
		})
		.done(function (response) {
			$("#tableContainer").html(response);
		})
		.fail(function (XMLHttpRequest, textStatus, errorThrown) {
			alert("FAIL");
		});
	});


	$("#newBtn").click(function () {
		var searchValue = $("#searchTxt").val();

		$.ajax({
			type: 'GET',
			url: '@Url.Action("Create", "Product")', //'/Product/Create',
		})
		.done(function (response) {
			$("#actionContainer").html(response);

			focusAction("actionContainer");
		})
		.fail(function (XMLHttpRequest, textStatus, errorThrown) {
			alert("FAIL");
		});
	});

	$(".editBtn").click(function () {
		$.ajax({
			type: 'GET',
			url: '@Url.Action("Edit", "Product")', // '/Product/Edit',
			data: {
				ID: $(this).attr('data-id')
			}
		})
		.done(function (response) {
			$("#actionContainer").html(response);

			focusAction("actionContainer");
		})
		.fail(function (XMLHttpRequest, textStatus, errorThrown) {
			alert("FAIL");
		});
	});

	$(".deleteBtn").click(function () {

		swal({
			title: "Confirm?",
			text: "Are you sure you want to delete this product?",
			icon: "warning",
			buttons: true,
			dangerMode: true,
		})
		.then((willDelete) => {
			if (willDelete) {
				$.ajax({
					type: 'POST',
					url: '@Url.Action("Delete", "Product")', // '/Product/Delete',
					data: {
						ID: $(this).attr('data-id')
					}
				})
				.done(function (response) {
					$("#tableContainer").html(response);
					swal("Record Deleted Successfully.", {
						icon: "success",
					});
				})
				.fail(function (XMLHttpRequest, textStatus, errorThrown) {
					alert("FAIL");
				});
			}
		});

		//var confirmDelete = confirm("Are you sure you want to delete this product?");
		//if (confirmDelete)
		//{
		//		$.ajax({
		//			type: 'POST',
		//			url: '/Product/Delete',
		//			data: {
		//				ID: $(this).attr('data-id')
		//			}
		//		})
		//		.done(function (response) {
		//			$("#tableContainer").html(response);

		//		})
		//		.fail(function (XMLHttpRequest, textStatus, errorThrown) {
		//			alert("FAIL");
		//		});

		//	}


	});
	var products = [];
	$(".addtoCart").click(function () {
		var productID = $(this).attr('data-id');

		products.push(productID);

		$.cookie('CartProducts', products.join('-'), { path: '/' });

		alert("Product Added to Cart.")
	});

</script>